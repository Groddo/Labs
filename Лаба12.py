#Задание на сумму знакопеременного ряда.
#(наличие комментариев для каждого функционально законченного блока обязательно)
#3. Вычислить сумму знакопеременного ряда |х(2n)|/(2n)!, где х-матрица ранга к (к и матрица задаются случайным образом),
#n - номер слагаемого. Сумма считается вычисленной, если точность вычислений будет не меньше t знаков после запятой.
#У алгоритма д.б. линейная сложность. Операция умножения –поэлементная. Знак первого слагаемого  +.

import numpy as np
import random
from decimal import Decimal, getcontext

def schet(x, t):
    #Параметры первого слагаемого ряда
    x = x
    znak = 1
    n = 1  #Число n, а также номер последовательности
    k = 2  #Переменная для подсчёта факториала
    res = 0
    factorial = 2
    curmatr = np.dot(x,x)
    while True:
        curr = Decimal(np.linalg.det(curmatr)/factorial) #Считаем текущее слагаемое, используем Decimal для сохранения чисел после запятой
        res+= znak * curr #Прибавляем текущее слагаемое к сумме с учётом знака
        print(f'Текущее n = {n}, (2n)! = {factorial}')   #Доказательство правильного подсчёта факториала

        if abs(curr) < 1/(10**t): #Проверяем на точность текущее слагаемое и если точность подходит, то выходим из цикла
            break

        znak *= -1 #Меняем знак
        #Считаем (2n)! для следующего слагаемого
        k += 1
        factorial *= k
        k += 1
        factorial *= k
        n += 1
        #Считаем x^(2n) для следующего слагаемого
        curmatr = np.dot(curmatr, np.dot(x,x))



    return res

try:
    t = int(input('Введите целое положительное число, которое определит число знаков после запятой(точность программы): '))
    while t > 250 and t < 1:
        t = int(input('Вы ввели число не подходящее по условию, введите целое число t > 1, t < 300'))

    k = random.randint(1, 10)  #Задание случайного порядка матрице(я взял максимальный порядок равным 10)
    x = np.random.randint(-1, 1, (k,k))  #Создание матрицы x с помощью numpy и random

    print(f'\n\nСгенерированная матрица x, {k}-го порядка:\n', x,'\n')

    getcontext().prec = t + 200 #Повышение точности вычислений(с учётом заданной)

    summa = schet(x, t)

    print(f'Сумма знакочередующегося ряда с заданной точностью {t} знаков после запятой: {summa}') #Вывод программы

except ValueError: #Проверка на ввод числа
    print('\nВы ввели символ не являющийся числом. Перезапустите программу и введите число')
